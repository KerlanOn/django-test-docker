[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "OrderView",
        "importPath": "app.views",
        "description": "app.views",
        "isExtraImport": true,
        "detail": "app.views",
        "documentation": {}
    },
    {
        "label": "UserView",
        "importPath": "app.views",
        "description": "app.views",
        "isExtraImport": true,
        "detail": "app.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "my_test_project.app.migrations.0001_initial",
        "description": "my_test_project.app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "my_test_project.app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "kind": 6,
        "importPath": "my_test_project.app.apps",
        "description": "my_test_project.app.apps",
        "peekOfCode": "class AppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'app'",
        "detail": "my_test_project.app.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "my_test_project.app.models",
        "description": "my_test_project.app.models",
        "peekOfCode": "class User(models.Model):\n    name = models.CharField(max_length=100)\n    email = models.EmailField(unique=True)\n    age = models.IntegerField()\n    def __str__(self):\n        return self.name\nclass Order(models.Model):\n    title = models.CharField(max_length=100)\n    description = models.TextField()\n    user = models.ForeignKey(User, on_delete=models.CASCADE)",
        "detail": "my_test_project.app.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "my_test_project.app.models",
        "description": "my_test_project.app.models",
        "peekOfCode": "class Order(models.Model):\n    title = models.CharField(max_length=100)\n    description = models.TextField()\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    def __str__(self):\n        return self.title",
        "detail": "my_test_project.app.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "my_test_project.app.serializers",
        "description": "my_test_project.app.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['id', 'name', 'email', 'age']\nclass OrderSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Order\n        fields = ['id', 'title', 'description', 'user']",
        "detail": "my_test_project.app.serializers",
        "documentation": {}
    },
    {
        "label": "OrderSerializer",
        "kind": 6,
        "importPath": "my_test_project.app.serializers",
        "description": "my_test_project.app.serializers",
        "peekOfCode": "class OrderSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Order\n        fields = ['id', 'title', 'description', 'user']",
        "detail": "my_test_project.app.serializers",
        "documentation": {}
    },
    {
        "label": "UserView",
        "kind": 6,
        "importPath": "my_test_project.app.views",
        "description": "my_test_project.app.views",
        "peekOfCode": "class UserView(APIView):\n    def get(self, request):\n        users = User.objects.all()\n        serializer = UserSerializer(users, many=True)\n        return Response(serializer.data)\n    def post(self, request):\n        serializer = UserSerializer(data=request.data)\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data, status=status.HTTP_201_CREATED)",
        "detail": "my_test_project.app.views",
        "documentation": {}
    },
    {
        "label": "OrderView",
        "kind": 6,
        "importPath": "my_test_project.app.views",
        "description": "my_test_project.app.views",
        "peekOfCode": "class OrderView(APIView):\n    def get(self, request):\n        orders = Order.objects.all()\n        serializer = OrderSerializer(orders, many=True)\n        return Response(serializer.data)\n    def post(self, request):\n        user_id = request.data.get('user')\n        user = get_object_or_404(User, id=user_id)\n        serializer = OrderSerializer(data=request.data)\n        if serializer.is_valid():",
        "detail": "my_test_project.app.views",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "my_test_project.app.views",
        "description": "my_test_project.app.views",
        "peekOfCode": "def home(request):\n    return HttpResponse(\"Welcome to the Home Page!\")\n# Представление для получения пользователей\nfrom rest_framework.views import APIView\nfrom rest_framework.response import Response\nfrom rest_framework import status\nfrom .models import User\nfrom .serializers import UserSerializer\nclass UserView(APIView):\n    def get(self, request):",
        "detail": "my_test_project.app.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.asgi",
        "description": "my_test_project.my_test_project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "my_test_project.my_test_project.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-0vm)m$x*27q@mygw5#!uk&4f*xf+uy0^t+cvr!b0apwq3!0$az'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-0vm)m$x*27q@mygw5#!uk&4f*xf+uy0^t+cvr!b0apwq3!0$az'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'app',\n]",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'my_test_project.urls'",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "ROOT_URLCONF = 'my_test_project.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "WSGI_APPLICATION = 'my_test_project.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'django',\n        'USER': 'django',\n        'PASSWORD': 'django',\n        'HOST': 'db',",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'django',\n        'USER': 'django',\n        'PASSWORD': 'django',\n        'HOST': 'db',\n        'PORT': '5432',\n    }\n}",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.settings",
        "description": "my_test_project.my_test_project.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "my_test_project.my_test_project.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.urls",
        "description": "my_test_project.my_test_project.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('users/', UserView.as_view(), name='users'),\n    path('orders/', OrderView.as_view(), name='orders'),\n    path('', OrderView.as_view(), name='home'),\n]",
        "detail": "my_test_project.my_test_project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "my_test_project.my_test_project.wsgi",
        "description": "my_test_project.my_test_project.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "my_test_project.my_test_project.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "my_test_project.manage",
        "description": "my_test_project.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_test_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "my_test_project.manage",
        "documentation": {}
    }
]